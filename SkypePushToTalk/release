#! /bin/bash
VER=$1
cd "$(dirname "$0")"
PROJECT_DIR="$(pwd)"
PROJECT="$(basename "$(pwd)")"
BUILDS_DIR=../builds
XCODE_BUILD_DIR=~/Documents/XBuilds
BUNDLE_NAME=$PROJECT.app

mkdir -p $BUILDS_DIR
cd $BUILDS_DIR
BUILDS_DIR="$(pwd)"
cd $PROJECT_DIR

BUNDLE=$XCODE_BUILD_DIR/Release/$BUNDLE_NAME
ZIP=$BUILDS_DIR/$PROJECT-$VER.zip


test -z "$VER" && {
  echo "Release a source zip of $PROJECT."
  echo ""
  echo "Usage: ./release 1.2.3"
  echo ""
  exit 1
}
git --version >/dev/null 2>&1 || {
  echo "Git is required to run this script."
  exit 1
}


echo
echo "Releasing $PROJECT $VER:"

echo " -> git tag v$VER"
git tag v$VER || {
  echo " *** git tag failed. Stop."
  echo
  echo "To rebuild an already built version, run:"
  echo "  git tag -d v$VER"
  exit 1
}

PREV_VER=$(agvtool mvers -terse1)
echo " -> updating version from $PREV_VER to $VER"
agvtool new-marketing-version $VER >/dev/null || {
  echo " *** avgtool failed. Stop."
  exit 1
}

echo " -> building a release version"
xcodebuild || {
  echo " *** xcodebuild failed. Stop."
  exit 1
}

test -d $BUNDLE || {
  echo " *** $BUNDLE does not exist. Stop."
  exit 1
}

echo " -> zipping the app bundle into $(basename $ZIP)"
cd "$(dirname $BUNDLE)"
zip -rq $ZIP "$(basename $BUNDLE)"

echo
echo "Done: see $ZIP"
echo
open -R "$ZIP"
